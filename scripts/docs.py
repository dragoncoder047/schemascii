#! /usr/bin/env python3
import datetime
import os
import textwrap

from scriptutils import spit, spy

# flake8: noqa: E402

from schemascii.component import Component
from schemascii.data import Data
from schemascii.data_consumer import _NOT_SET as NO_DEFAULT
from schemascii.data_consumer import Option


def output_file(filename: os.PathLike, heading: str, content: str):
    spit(filename, textwrap.dedent(f"""
        # {heading}

        <!-- This file was automatically generated by scripts/docs.py
        on {datetime.datetime.now().ctime()} -->
        """) + content)


def format_option(opt: Option) -> str:
    typename = (opt.type.__name__
                if isinstance(opt.type, type)
                else " or ".join(f"`{z!s}`" for z in opt.type))
    items: list[str] = [opt.name, typename, opt.help, "(required)"]
    if opt.default is not NO_DEFAULT:
        items[-1] = repr(opt.default) if opt.default is not None else "(no value)"
    return f"| {' | '.join(items)} |\n"


def format_scope(scopename: str, options: list[Option],
                 interj: str, head: str) -> str:
    scope_text = textwrap.dedent(f"""
        ## {head} `{scopename.upper()}`%%%INTERJ%%%

        | Option | Value | Description | Default |
        |:------:|:-----:|:------------|:-------:|
        """)
    for option in options:
        scope_text += format_option(option)
    scope_text = scope_text.replace("%%%INTERJ%%%", "\n\n" + interj if interj else "")
    return scope_text


def get_RDs(scopename: str) -> list[str] | None:
    out = []
    tgt_list = Data.available_options[scopename]
    for component in Component.all_components:
        if Component.all_components[component].options == tgt_list:
            out.append(component)
    if out:
        return out
    return None


def main():
    content = ""
    for s, d in Data.available_options.items():
        rds_line = ""
        heading = "Scope"
        if (rds := get_RDs(s)) is not None:
            heading = "Component"
            rds_line = "Reference Designators: "
            rds_line += ", ".join(f"`{x}`" for x in rds)
        content += format_scope(s, d, rds_line, heading)

    output_file("options.md", "Data Section Options", content)


if __name__ == '__main__':
    main()
